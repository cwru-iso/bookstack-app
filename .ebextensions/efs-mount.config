###############################################################
## Elastic Beanstalk environment variables.
##
## These are the required variables needed for your EFS
## volume to mount correctly. You /can/ tie a EFS volume to
## lifecycle of this environment, but that is not recommended
## for any production environments.
##
## EFS_MOUNT_DIR and REGION should not be changed.
###############################################################
option_settings:
  aws:elasticbeanstalk:application:environment:
    EFS_FILE_SYSTEM_ID: 'fs-XXXXXXXX'
    EFS_MOUNT_DIR: '/mnt/efs'
    REGION: '`{"Ref": "AWS::Region"}`'

###############################################################
## Commands executed AFTER unpacking appliation data.
##
## DO NOT TOUCH -- This will create the EFS folder structure,
## set the proper permissions for data can be read/written from
## it, and remove the placeholder folders in the BookStack
## root directory (so the symlinks will work).
###############################################################
container_commands:
  01_mkdir:
    command: |
      mkdir -pv "${EFS_MOUNT_DIR}/public/uploads"
      mkdir -pv "${EFS_MOUNT_DIR}/storage/uploads/"{files,images}
  02_chmod:
    command: "chmod -v 775 ${EFS_MOUNT_DIR}/public/uploads ${EFS_MOUNT_DIR}/storage/uploads"
  03_chown:
    command: "chown -Rv webapp:webapp ${EFS_MOUNT_DIR}/{public,storage}"
  04_link:
    command: |
      rm -rfv "public/uploads" && sudo -u webapp ln -sv "${EFS_MOUNT_DIR}/public/uploads" "public/uploads"
      rm -rfv "storage/uploads" && sudo -u webapp ln -sv "${EFS_MOUNT_DIR}/storage/uploads" "storage/uploads"

###############################################################
## Commands executed BEFORE unpacking appliation data.
##
## DO NOT TOUCH -- This runs the 'efs-mount.sh' script, see
## that section below for more details.
###############################################################
commands:
  01_mount:
    command: "/tmp/efs-mount.sh"

###############################################################
## Extra packages to install on the EC2 instance.
## any commands on the instance. [] = latest
###############################################################
packages:
  yum:
    nfs-utils: []

###############################################################
## Additional text-files/scripts to create.
##
## efs-mount.sh -- This will attempt to mount the EFS volume
## using the NFS linux module (as opposed the Amazon's EFS
## helper package).
###############################################################
files:
  "/tmp/efs-mount.sh":
    mode: "000755"
    content: |
      #!/usr/bin/env bash
      
      # Get Beanstalk environment variables
      EFS_FILE_SYSTEM_ID=$(/opt/elasticbeanstalk/bin/get-config environment -k 'EFS_FILE_SYSTEM_ID')
      EFS_MOUNT_DIR=$(/opt/elasticbeanstalk/bin/get-config environment -k 'EFS_MOUNT_DIR')
      EFS_REGION=$(/opt/elasticbeanstalk/bin/get-config environment -k 'REGION')
      EFS_DNS_NAME="${EFS_FILE_SYSTEM_ID}.efs.${EFS_REGION}.amazonaws.com"

      echo "Mounting EFS filesystem '${EFS_DNS_NAME}' to '${EFS_MOUNT_DIR}'..."

      echo "Stopping NFS ID Mapper..."
      service rpcidmapd status &> /dev/null
      if [ $? -ne 0 ]; then
          echo "  rpc.idmapd is already stopped!"
      else
          service rpcidmapd stop
          if [ $? -ne 0 ]; then
              echo "  ERROR: Failed to stop NFS ID Mapper!"
              exit $?
          fi
      fi

      echo "Checking if EFS mount directory exists..."
      if [ ! -d "${EFS_MOUNT_DIR}" ]; then
          echo "  Creating directory '${EFS_MOUNT_DIR}' ..."
          mkdir -p "${EFS_MOUNT_DIR}"
          if [ $? -ne 0 ]; then
              echo "    ERROR: Failed to create directory '${EFS_MOUNT_DIR}'!"
              exit $?
          fi
      else
          echo "  Directory '${EFS_MOUNT_DIR}' already exists... skipping creation!"
      fi

      mountpoint -q "${EFS_MOUNT_DIR}"
      if [ $? -ne 0 ]; then
          echo "mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${EFS_DNS_NAME}:/ ${EFS_MOUNT_DIR}"
          mount -t "nfs4" -o "nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2" "${EFS_DNS_NAME}:/" "${EFS_MOUNT_DIR}"
          if [ $? -ne 0 ]; then
              echo "  ERROR: Failed to mount '${EFS_DNS_NAME}'!"
              exit $?
          fi

          chmod 777 "${EFS_MOUNT_DIR}"
          sudo -u webapp touch "${EFS_MOUNT_DIR}/it_works"
          if [ $? -ne 0 ]; then
              echo "  ERROR: File permission error!"
              exit $?
          else
              sudo -u webapp rm -f "${EFS_MOUNT_DIR}/it_works"
          fi
      else
          echo "Directory '${EFS_MOUNT_DIR}' is already a valid mountpoint... skipping!"
      fi
